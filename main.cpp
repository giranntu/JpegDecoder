#include <array>
#include <cstdint>
#include <iostream>
#include <vector>

#include "jpeg_decoder.h"

void test1() {
    ParseJpeg("samples/huff_simple0.jpg");

    /*
    std::vector<uint8_t> frame_header_stream = { 00, 0x11, 0x08, 0x03, 0x02, 0x04, 0xE9, 0x03, 0x01, 0x22, 0x00, 0x02, 0x11, 0x01, 0x03, 0x11, 0x01 };
    auto frame_header = DecodeFrameHeader(frame_header_stream.data());

    std::vector<uint8_t> scan_header_stream = { 0x00, 0x0C, 0x03, 0x01, 0x00, 0x02, 0x10, 0x03, 0x10, 0x00, 0x00, 0x01 };
    auto scan_header = DecodeScanHeader(scan_header_stream.data());

    std::vector<uint8_t> dqt = {
        0x00, 0x43, 0x01, 0x09, 0x09, 0x09, 0x0C, 0x0B, 0x0C, 0x18, 0x0D, 0x0D, 0x18, 0x32, 0x21, 0x1C,
        0x21, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32,
        0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32,
        0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32,
        0x32, 0x32, 0x32 };
    auto quant_table = DecodeDQT(dqt.data());

    std::vector<uint8_t> dht = { 0x00, 0x1B, 0x00, 0x00, 0x01, 0x05, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x01, 0x02, 0x04, 0x05, 0x06, 0x07 };
    auto huffman_table = DecodeDefHuffTable(dht.data());
    */
}

int main() {
    test1();

    return 0;
}